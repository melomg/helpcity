buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 26
    compileOptions.encoding = 'UTF-8'
    defaultConfig {
        applicationId "com.projects.melih.helpcity"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        dev {
            storeFile file(keystoreProperties['storeFile'])
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig null
            buildConfigField("boolean", "STRICT_MODE", "true")
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "STRICT_MODE", "false")
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            signingConfig signingConfigs.dev
            applicationId "com.projects.melih.helpcitytest"
            dimension "default"
            resValue "string", "app_name", "Help City Test"
        }
        prod {
            applicationId "com.projects.melih.helpcity"
            dimension "default"
            resValue "string", "app_name", "Help City"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation 'com.google.android.gms:play-services-maps:11.6.2'
    implementation 'com.google.android.gms:play-services-location:11.6.2'
    implementation 'com.google.android.gms:play-services-places:11.6.2'
    implementation 'com.google.android.gms:play-services-auth:11.6.2'
    implementation 'com.google.firebase:firebase-auth:11.6.2'
    implementation 'com.firebaseui:firebase-ui-auth:3.1.0'

    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    implementation("com.github.hotchemi:permissionsdispatcher:3.0.1") {
        exclude module: "support-v13"
    }
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:3.0.1"

    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation 'com.jakewharton.timber:timber:4.6.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}

apply plugin: 'com.google.gms.google-services'